[{"/Users/hannahweiss/Documents/spring-2021/webdev/4digits/src/index.js":"1","/Users/hannahweiss/Documents/spring-2021/webdev/4digits/src/reportWebVitals.js":"2","/Users/hannahweiss/Documents/spring-2021/webdev/4digits/src/App.js":"3"},{"size":500,"mtime":1612107998541,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1612107998542,"results":"6","hashOfConfig":"5"},{"size":4288,"mtime":1612454259422,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"bzb8yk",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/hannahweiss/Documents/spring-2021/webdev/4digits/src/index.js",[],[],"/Users/hannahweiss/Documents/spring-2021/webdev/4digits/src/reportWebVitals.js",[],"/Users/hannahweiss/Documents/spring-2021/webdev/4digits/src/App.js",["16"],"import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [secret, setSecret] = useState(1234);\n  const [guesses, setGuesses] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [lives, setLives] = useState(8);\n  const [message, setMessage] = useState(\"Game over, you lost\");\n\n  // called each time the user guesses to check if they won or\n  // ran out of lives\n  function check_game_over(text) {\n    if (text == secret) {\n      setMessage(\"You Won!\");\n      setLives(0);\n    } else {\n      setLives(lives - 1);\n    }\n  }\n\n  // called when a user hits enter or selects the guess button\n  // first validates the guess and then adds it to guess list\n  function guess(ev) {\n    let valid_guess = validateGuess(text);\n    setText(\"\");\n    if (valid_guess) {\n      let ng = guesses.concat(text);\n      console.log(\"ng\", ng);\n      setGuesses(ng);\n      check_game_over(text);\n    } else {\n      console.log(\"invalid guess\");\n      alert(\n        \"Guesses must be composed of 4 unigue digits and be unique from previous guesses.\"\n      );\n    }\n  }\n\n  // ensures that a guess is 4 unique digits and has not been\n  // already guessed\n  function validateGuess(guess) {\n    if (guesses.includes(guess)) {\n      return false;\n    }\n    let valid_guess_digit = new Set([\n      \"0\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n    ]);\n    let used_digits = new Set();\n    if (guess.length == 4) {\n      for (let i = 0; i < guess.length; i++) {\n        if (valid_guess_digit.has(guess[i]) && !used_digits.has(guess[i])) {\n          used_digits.add(guess[i]);\n        } else {\n          return false;\n        }\n      }\n    } else {\n      return false;\n    }\n\n    return true;\n  }\n\n  function keyPress(ev) {\n    if (ev.key == \"Enter\") {\n      guess(ev);\n    }\n  }\n\n  function updateText(ev) {\n    setText(ev.target.value);\n    console.log(text);\n  }\n\n  // resets the game back to an initial state\n  function reset() {\n    setVal();\n    setGuesses([]);\n    setLives(8);\n    setMessage(\"Game over, you lost\");\n  }\n\n  function setVal() {\n    let val = \"\";\n    let digitSet = new Set();\n    while (val.length < 4) {\n      let digit = Math.floor(Math.random() * 10);\n      if (!digitSet.has(digit)) {\n        digitSet.add(digit);\n        val = val + digit;\n      }\n    }\n\n    setSecret(val);\n    console.log(val);\n  }\n\n  // calculates the \"bulls\" and \"cows\" for a guess\n  function getResult(text) {\n    let guess_text = text.split(\"\");\n    let actual_text = secret.split(\"\");\n\n    var i;\n    let wrong_place = 0;\n    let correct_place = 0;\n    for (i = 0; i < 4; i++) {\n      if (guess_text[i] == actual_text[i]) {\n        correct_place += 1;\n      } else if (actual_text.includes(guess_text[i])) {\n        console.log(\"in else\");\n        console.log(guess_text[i]);\n        console.log(actual_text);\n        wrong_place += 1;\n      }\n    }\n    return correct_place + \" bulls; \" + wrong_place + \" cows\";\n  }\n\n  useEffect(() => {\n    setVal();\n  }, []);\n\n  // the screen that is displayed when a game is over\n  function GameOver() {\n    return (\n      <div>\n        <p>{message}</p>\n        <button className=\"button\" onClick={reset}>Reset Game</button>\n      </div>\n    );\n  }\n\n  let body = null;\n\n  if (lives > 0) {\n    body = (\n      <div className=\"row\">\n        <div className=\"column\">\n          <h2>{lives} Lives left!</h2>\n          <input\n            id=\"input-box\"\n            type=\"text\"\n            onKeyPress={keyPress}\n            onChange={updateText}\n            value={text}\n          />\n          <button className=\"button\" onClick={guess}>\n            Guess\n          </button>\n          <br />\n          <br />\n          <button className=\"button\" onClick={reset}>Reset Game</button>\n        </div>\n        <div className=\"column\">\n          <h2>Guesses</h2>\n          <ol className=\"guesses\">\n            {guesses.map((value, index) => {\n              return <li key={index}>{value + \" \" + getResult(value)}</li>;\n            })}\n          </ol>\n        </div>\n      </div>\n    );\n  } else {\n    body = (\n      <div>\n        <GameOver />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>4 Digits Game</h1>\n      {body}\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"17","severity":1,"message":"18","line":24,"column":18,"nodeType":"19","messageId":"20","endLine":24,"endColumn":20},"no-unused-vars","'ev' is defined but never used.","Identifier","unusedVar"]